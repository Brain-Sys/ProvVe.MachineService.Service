//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProvVe.MachineService.ModernWindowsApp.DeviceService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRequest", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Req" +
        "uests")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortRequest))]
    public partial class BaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Version ClientVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Version ClientVersion {
            get {
                return this.ClientVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientVersionField, value) != true)) {
                    this.ClientVersionField = value;
                    this.RaisePropertyChanged("ClientVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResetRequest", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Req" +
        "uests")]
    [System.SerializableAttribute()]
    public partial class ResetRequest : ProvVe.MachineService.ModernWindowsApp.DeviceService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MachineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaxRetryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MachineId {
            get {
                return this.MachineIdField;
            }
            set {
                if ((this.MachineIdField.Equals(value) != true)) {
                    this.MachineIdField = value;
                    this.RaisePropertyChanged("MachineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaxRetry {
            get {
                return this.MaxRetryField;
            }
            set {
                if ((this.MaxRetryField.Equals(value) != true)) {
                    this.MaxRetryField = value;
                    this.RaisePropertyChanged("MaxRetry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMachinesRequest", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Req" +
        "uests")]
    [System.SerializableAttribute()]
    public partial class GetMachinesRequest : ProvVe.MachineService.ModernWindowsApp.DeviceService.BaseRequest {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenPortRequest", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Req" +
        "uests")]
    [System.SerializableAttribute()]
    public partial class OpenPortRequest : ProvVe.MachineService.ModernWindowsApp.DeviceService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        private ProvVe.MachineService.ModernWindowsApp.DeviceService.Ports PortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ProvVe.MachineService.ModernWindowsApp.DeviceService.Ports PortName {
            get {
                return this.PortNameField;
            }
            set {
                if ((this.PortNameField.Equals(value) != true)) {
                    this.PortNameField = value;
                    this.RaisePropertyChanged("PortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolField, value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ports", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Enu" +
        "merations")]
    public enum Ports : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COM1 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COM2 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COM3 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COM4 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        localhost = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Res" +
        "ponses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortResponse))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Version ServerVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Version ServerVersion {
            get {
                return this.ServerVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerVersionField, value) != true)) {
                    this.ServerVersionField = value;
                    this.RaisePropertyChanged("ServerVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResetResponse", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Res" +
        "ponses")]
    [System.SerializableAttribute()]
    public partial class ResetResponse : ProvVe.MachineService.ModernWindowsApp.DeviceService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActualTimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActualTimestamp {
            get {
                return this.ActualTimestampField;
            }
            set {
                if ((this.ActualTimestampField.Equals(value) != true)) {
                    this.ActualTimestampField = value;
                    this.RaisePropertyChanged("ActualTimestamp");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMachinesResponse", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Res" +
        "ponses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.BaseResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.Ports))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.ErrorDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.MachineDto[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.MachineDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.CustomerDto[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.CustomerDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Version))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Tuple<string, int, string, System.DateTime>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.BaseRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest))]
    public partial class GetMachinesResponse : ProvVe.MachineService.ModernWindowsApp.DeviceService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenPortResponse", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Res" +
        "ponses")]
    [System.SerializableAttribute()]
    public partial class OpenPortResponse : ProvVe.MachineService.ModernWindowsApp.DeviceService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorDto", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Dto" +
        "")]
    [System.SerializableAttribute()]
    public partial class ErrorDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineDto", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Dto" +
        "")]
    [System.SerializableAttribute()]
    public partial class MachineDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProvVe.MachineService.ModernWindowsApp.DeviceService.CustomerDto[] CustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProvVe.MachineService.ModernWindowsApp.DeviceService.CustomerDto[] Customers {
            get {
                return this.CustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersField, value) != true)) {
                    this.CustomersField = value;
                    this.RaisePropertyChanged("Customers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkHours {
            get {
                return this.WorkHoursField;
            }
            set {
                if ((this.WorkHoursField.Equals(value) != true)) {
                    this.WorkHoursField = value;
                    this.RaisePropertyChanged("WorkHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDto", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Dto" +
        "")]
    [System.SerializableAttribute()]
    public partial class CustomerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MachineCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MachineCodes {
            get {
                return this.MachineCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineCodesField, value) != true)) {
                    this.MachineCodesField = value;
                    this.RaisePropertyChanged("MachineCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DeviceService.IDeviceService")]
    public interface IDeviceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommunication/OpenPort", ReplyAction="http://tempuri.org/ICommunication/OpenPortResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ProvVe.MachineService.ModernWindowsApp.DeviceService.ErrorDto), Action="http://tempuri.org/ICommunication/OpenPortErrorDtoFault", Name="ErrorDto", Namespace="http://schemas.datacontract.org/2004/07/ProvVe.MachineService.NetworkMessages.Dto" +
            "")]
        ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortResponse OpenPort(ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommunication/OpenPort", ReplyAction="http://tempuri.org/ICommunication/OpenPortResponse")]
        System.Threading.Tasks.Task<ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortResponse> OpenPortAsync(ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/Ping", ReplyAction="http://tempuri.org/IDeviceService/PingResponse")]
        System.DateTime Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/Ping", ReplyAction="http://tempuri.org/IDeviceService/PingResponse")]
        System.Threading.Tasks.Task<System.DateTime> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/Reset", ReplyAction="http://tempuri.org/IDeviceService/ResetResponse")]
        ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetResponse Reset(ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/Reset", ReplyAction="http://tempuri.org/IDeviceService/ResetResponse")]
        System.Threading.Tasks.Task<ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetResponse> ResetAsync(ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetMachines", ReplyAction="http://tempuri.org/IDeviceService/GetMachinesResponse")]
        ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesResponse GetMachines(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetMachines", ReplyAction="http://tempuri.org/IDeviceService/GetMachinesResponse")]
        System.Threading.Tasks.Task<ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesResponse> GetMachinesAsync(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/SearchMachines", ReplyAction="http://tempuri.org/IDeviceService/SearchMachinesResponse")]
        ProvVe.MachineService.ModernWindowsApp.DeviceService.MachineDto[] SearchMachines(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/SearchMachines", ReplyAction="http://tempuri.org/IDeviceService/SearchMachinesResponse")]
        System.Threading.Tasks.Task<ProvVe.MachineService.ModernWindowsApp.DeviceService.MachineDto[]> SearchMachinesAsync(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/Call", ReplyAction="http://tempuri.org/IDeviceService/CallResponse")]
        System.Tuple<string, int, string, System.DateTime> Call(double request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/Call", ReplyAction="http://tempuri.org/IDeviceService/CallResponse")]
        System.Threading.Tasks.Task<System.Tuple<string, int, string, System.DateTime>> CallAsync(double request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceServiceChannel : ProvVe.MachineService.ModernWindowsApp.DeviceService.IDeviceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceServiceClient : System.ServiceModel.ClientBase<ProvVe.MachineService.ModernWindowsApp.DeviceService.IDeviceService>, ProvVe.MachineService.ModernWindowsApp.DeviceService.IDeviceService {
        
        public DeviceServiceClient() {
        }
        
        public DeviceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortResponse OpenPort(ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortRequest request) {
            return base.Channel.OpenPort(request);
        }
        
        public System.Threading.Tasks.Task<ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortResponse> OpenPortAsync(ProvVe.MachineService.ModernWindowsApp.DeviceService.OpenPortRequest request) {
            return base.Channel.OpenPortAsync(request);
        }
        
        public System.DateTime Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetResponse Reset(ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetRequest input) {
            return base.Channel.Reset(input);
        }
        
        public System.Threading.Tasks.Task<ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetResponse> ResetAsync(ProvVe.MachineService.ModernWindowsApp.DeviceService.ResetRequest input) {
            return base.Channel.ResetAsync(input);
        }
        
        public ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesResponse GetMachines(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest input) {
            return base.Channel.GetMachines(input);
        }
        
        public System.Threading.Tasks.Task<ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesResponse> GetMachinesAsync(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest input) {
            return base.Channel.GetMachinesAsync(input);
        }
        
        public ProvVe.MachineService.ModernWindowsApp.DeviceService.MachineDto[] SearchMachines(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest input) {
            return base.Channel.SearchMachines(input);
        }
        
        public System.Threading.Tasks.Task<ProvVe.MachineService.ModernWindowsApp.DeviceService.MachineDto[]> SearchMachinesAsync(ProvVe.MachineService.ModernWindowsApp.DeviceService.GetMachinesRequest input) {
            return base.Channel.SearchMachinesAsync(input);
        }
        
        public System.Tuple<string, int, string, System.DateTime> Call(double request) {
            return base.Channel.Call(request);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<string, int, string, System.DateTime>> CallAsync(double request) {
            return base.Channel.CallAsync(request);
        }
    }
}
